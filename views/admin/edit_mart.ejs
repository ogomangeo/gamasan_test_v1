<style>
  .edit-mart-container {
    margin: 0 auto;
    padding: 20px;
  }

  .edit-mart-form {
    width: 800px;
  }

  .edit-mart-form-group {
    margin-bottom: 20px;
    display: flex;
    align-items: flex-start;
    gap: 20px;
  }

  .edit-mart-form-group label {
    min-width: 120px;
    font-weight: bold;
  }

  .edit-mart-form-group input[type="text"],
  .edit-mart-form-group input[type="number"],
  .edit-mart-form-group textarea {
    flex: 1;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  .edit-mart-form-group textarea {
    height: 50px;
    resize: vertical;
  }

  /* 썸네일 미리보기 스타일 */
  .edit-mart-thumbnail-preview {
    min-width: 100px;
    width: 100px;
    height: 100px;
    border: 1px solid #ddd;
    padding: 5px;
    margin-left: 10px;
  }

  .edit-mart-thumbnail-preview img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* 옵션 관련 스타일 */
  .edit-mart-options-header {
    display: flex;
    align-items: center;
    gap: 20px;
  }

  .edit-mart-options-list {
    margin-top: 15px;
    width: 100%;
  }

  .edit-mart-btn-add-option {
    background-color: #28a745;
    color: white;
    padding: 8px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    white-space: nowrap;
  }

  .edit-mart-option-group {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 10px;
    width: 100%;
  }

  .edit-mart-option-inputs {
    display: flex;
    flex: 1;
    gap: 15px;
  }

  .edit-mart-option-name {
    flex: 2;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  .edit-mart-option-price {
    flex: 1;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  .edit-mart-btn-danger {
    min-width: 80px;
    padding: 8px 15px;
    background-color: #dc3545;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .edit-mart-btn-edit {
    background-color: #000080;
    color: white;
    padding: 5px 10px;
    cursor: pointer;
  }

  .required {
    color: #ff0000;
    margin-right: 4px;
  }

  .edit-mart-market-group {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 20px;
    border-radius: 4px;
  }

  .edit-mart-market-options {
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px dashed #ddd;
  }

  .market-options-list {
    margin-top: 10px;
  }
</style>

<div class="edit-mart-container">
  <a href="/allMart" class="edit-mart-back-link">&larr; 뒤로</a>

  <h2 class="edit-mart-title">
    <%= locals.mart ? '상품 수정' : '상품 등록' %>
  </h2>

  <form id="editMartForm" class="edit-mart-form"
    action="<%= locals.mart ? `/edit_mart/${mart._id}?_method=PUT` : '/add_mart' %>" method="POST"
    onsubmit="return validateAndSubmit()">
    <!-- 기본 정보 -->
    <div class="edit-mart-form-group">
      <label for="brand"><span class="required">*</span>브랜드명</label>
      <input type="text" id="brand" name="brand" value="<%= locals.mart ? mart.brand : '' %>" required>
    </div>

    <div class="edit-mart-form-group">
      <label for="title"><span class="required">*</span>상품명</label>
      <input type="text" id="title" name="title" value="<%= locals.mart ? mart.title : '' %>" required>
    </div>

    <!-- 카테고리 -->
    <div class="edit-mart-form-group">
      <label for="category1"><span class="required">*</span>카테고리1</label>
      <input type="text" id="category1" name="category1" value="<%= locals.mart ? mart.category1 : '' %>" required>
    </div>

    <div class="edit-mart-form-group">
      <label for="category2"><span class="required">*</span>카테고리2</label>
      <input type="text" id="category2" name="category2" value="<%= locals.mart ? mart.category2 : '' %>" required>
    </div>

    <!-- 썸네일 이미지 -->
    <div class="edit-mart-form-group">
      <label for="thumbnail1"><span class="required">*</span>대표 썸네일 1</label>
      <input type="text" id="thumbnail1" name="thumbnail1" placeholder="이미지 URL"
        value="<%= locals.mart ? mart.thumbnail1 : '' %>" onchange="previewImage(this, 'preview1')" required>
      <div class="edit-mart-thumbnail-preview" id="preview1">
        <% if (locals.mart && mart.thumbnail1) { %>
          <img src="<%= mart.thumbnail1 %>" alt="썸네일 1 미리보기">
          <% } %>
      </div>
    </div>

    <div class="edit-mart-form-group">
      <label for="thumbnail2"><span class="required">*</span>대표 썸네일 2</label>
      <input type="text" id="thumbnail2" name="thumbnail2" placeholder="이미지 URL"
        value="<%= locals.mart ? mart.thumbnail2 : '' %>" onchange="previewImage(this, 'preview2')" required>
      <div class="edit-mart-thumbnail-preview" id="preview2">
        <% if (locals.mart && mart.thumbnail2) { %>
          <img src="<%= mart.thumbnail2 %>" alt="썸네일 2 미리보기">
          <% } %>
      </div>
    </div>

    <div class="edit-mart-form-group">
      <label for="thumbnail3"><span class="required">*</span>대표 썸네일 3</label>
      <input type="text" id="thumbnail3" name="thumbnail3" placeholder="이미지 URL"
        value="<%= locals.mart ? mart.thumbnail3 : '' %>" onchange="previewImage(this, 'preview3')" required>
      <div class="edit-mart-thumbnail-preview" id="preview3">
        <% if (locals.mart && mart.thumbnail3) { %>
          <img src="<%= mart.thumbnail3 %>" alt="썸네일 3 미리보기">
          <% } %>
      </div>
    </div>

    <!-- 추가 썸네일 -->
    <div class="edit-mart-form-group">
      <label for="additional_thumbnail1">추가 썸네일 1</label>
      <input type="text" id="additional_thumbnail1" name="additional_thumbnail1" placeholder="이미지 URL"
        value="<%= locals.mart ? mart.additional_thumbnail1 : '' %>" onchange="previewImage(this, 'preview_add1')">
      <div class="edit-mart-thumbnail-preview" id="preview_add1">
        <% if (locals.mart && mart.additional_thumbnail1) { %>
          <img src="<%= mart.additional_thumbnail1 %>" alt="추가 썸네일 1 미리보기">
          <% } %>
      </div>
    </div>

    <div class="edit-mart-form-group">
      <label for="additional_thumbnail2">추가 썸네일 2</label>
      <input type="text" id="additional_thumbnail2" name="additional_thumbnail2" placeholder="이미지 URL"
        value="<%= locals.mart ? mart.additional_thumbnail2 : '' %>" onchange="previewImage(this, 'preview_add2')">
      <div class="edit-mart-thumbnail-preview" id="preview_add2">
        <% if (locals.mart && mart.additional_thumbnail2) { %>
          <img src="<%= mart.additional_thumbnail2 %>" alt="추가 썸네일 2 미리보기">
          <% } %>
      </div>
    </div>

    <div class="edit-mart-form-group">
      <label for="additional_thumbnail3">추가 썸네일 3</label>
      <input type="text" id="additional_thumbnail3" name="additional_thumbnail3" placeholder="이미지 URL"
        value="<%= locals.mart ? mart.additional_thumbnail3 : '' %>" onchange="previewImage(this, 'preview_add3')">
      <div class="edit-mart-thumbnail-preview" id="preview_add3">
        <% if (locals.mart && mart.additional_thumbnail3) { %>
          <img src="<%= mart.additional_thumbnail3 %>" alt="추가 썸네일 3 미리보기">
          <% } %>
      </div>
    </div>

    <!-- 상품 설명 -->
    <div class="edit-mart-form-group">
      <label for="script"><span class="required">*</span>상품 설명</label>
      <textarea id="script" name="script" rows="5" required><%= locals.mart ? mart.script : '' %></textarea>
    </div>

    <!-- 추가 설명 -->
    <div class="edit-mart-form-group">
      <label for="additional_script1">추가 설명 1</label>
      <textarea id="additional_script1" name="additional_script1"
        rows="3"><%= locals.mart ? mart.additional_script1 : '' %></textarea>
    </div>

    <div class="edit-mart-form-group">
      <label for="additional_script2">추가 설명 2</label>
      <textarea id="additional_script2" name="additional_script2"
        rows="3"><%= locals.mart ? mart.additional_script2 : '' %></textarea>
    </div>

    <div class="edit-mart-form-group">
      <label for="additional_script3">추가 설명 3</label>
      <textarea id="additional_script3" name="additional_script3"
        rows="3"><%= locals.mart ? mart.additional_script3 : '' %></textarea>
    </div>

    <!-- 배송 정보 -->
    <div class="edit-mart-form-group">
      <label for="delivery"><span class="required">*</span>배송 정보</label>
      <input type="text" id="delivery" name="delivery" value="<%= locals.mart ? mart.delivery : '' %>"
        placeholder="배송비를 입력해주세요" required>
    </div>

    <!-- 마켓 링크 정보 -->
    <div class="edit-mart-form-group">
      <label><span class="required">*</span>마켓 정보</label>
      <button type="button" class="edit-mart-btn edit-mart-btn-add-option" onclick="addMarket()">+ 마켓 추가</button>
    </div>

    <div id="market-links-list" class="edit-mart-options-list">
      <% if (locals.mart && mart.market_link && mart.market_link.length> 0) { %>
        <% mart.market_link.forEach(function(market, index) { %>
          <div class="edit-mart-market-group" data-market-index="<%= index %>">
            <div class="edit-mart-option-inputs">
              <input type="text" name="market_link_<%= index %>_market_name" class="edit-mart-option-name"
                value="<%= market.market_name %>" placeholder="마켓 이름" required>
              <input type="text" name="market_link_<%= index %>_market_url" class="edit-mart-option-name"
                value="<%= market.market_url %>" placeholder="마켓 URL" required>
            </div>
            <textarea name="market_link_<%= index %>_market_description" class="edit-mart-option-name"
              placeholder="마켓 설명"><%= market.market_description %></textarea>

            <!-- 마켓별 옵션 -->
            <div class="edit-mart-market-options">
              <button type="button" class="edit-mart-btn edit-mart-btn-add-option"
                onclick="addMarketOption('<%= index %>')">
                + 마켓 옵션 추가
              </button>
              <div class="market-options-list">
                <% if (market.market_options && market.market_options.length> 0) { %>
                  <% market.market_options.forEach(function(option, optionIndex) { %>
                    <div class="edit-mart-option-group">
                      <div class="edit-mart-option-inputs">
                        <input type="text" name="market_link_<%= index %>_market_options_<%= optionIndex %>_name"
                          class="edit-mart-option-name" value="<%= option.name %>" placeholder="옵션명" required>
                        <input type="text" name="market_link_<%= index %>_market_options_<%= optionIndex %>_price"
                          class="edit-mart-option-price" value="<%= option.price.toLocaleString() %>" placeholder="가격"
                          required onchange="formatPrice(this)">
                      </div>
                      <button type="button" class="edit-mart-btn edit-mart-btn-danger"
                        onclick="removeMarketOption(this)">삭제</button>
                    </div>
                    <% }); %>
                      <% } %>
              </div>
            </div>
            <button type="button" class="edit-mart-btn edit-mart-btn-danger" onclick="removeMarket(this)">마켓 삭제</button>
          </div>
          <% }); %>
            <% } %>
    </div>
    <!-- 상세 이미지들 -->
    <div class="edit-mart-form-group">
      <label><span class="required">*</span>상세 이미지</label>
      <button type="button" class="edit-mart-btn edit-mart-btn-add-option" onclick="addDetailedImage()">+ 이미지
        추가</button>
    </div>

    <div id="detailed-images-list" class="edit-mart-options-list">
      <% if (locals.mart && mart.detailed_images && mart.detailed_images.length> 0) { %>
        <% mart.detailed_images.forEach((image, index)=> { %>
          <div class="edit-mart-option-group">
            <div class="edit-mart-option-inputs">
              <input type="text" name="detailed_images[<%= index %>]" class="edit-mart-option-name" value="<%= image %>"
                placeholder="이미지 URL" required>
            </div>
            <button type="button" class="edit-mart-btn edit-mart-btn-danger"
              onclick="removeDetailedImage(this)">삭제</button>
          </div>
          <% }); %>
            <% } %>
    </div>

    <!-- 옵션 정보 -->
    <div class="edit-mart-form-group">
      <label><span class="required">*</span>상품 옵션</label>
      <button type="button" class="edit-mart-btn edit-mart-btn-add-option" onclick="addOption()">+ 옵션
        추가</button>
    </div>

    <div id="options-list" class="edit-mart-options-list">
      <% if (locals.mart && mart.options && mart.options.length> 0) { %>
        <% mart.options.forEach((option, index)=> { %>
          <div class="edit-mart-option-group">
            <div class="edit-mart-option-inputs">
              <input type="text" name="options[<%= index %>][name]" class="edit-mart-option-name"
                value="<%= option.name %>" placeholder="옵션명" required>
              <input type="text" name="options[<%= index %>][price]" class="edit-mart-option-price"
                value="<%= option.price.toLocaleString() %>" placeholder="가격" required onchange="formatPrice(this)">
            </div>
            <button type="button" class="edit-mart-btn edit-mart-btn-danger" onclick="removeOption(this)">삭제</button>
          </div>
          <% }); %>
            <% } %>
    </div>

    <button type="submit" class="edit-mart-btn-edit">
      <%= locals.mart ? '상품 수정' : '상품 등록' %>
    </button>
  </form>
</div>

<script>
  // 이미지 미리보기 관련 함수
  function previewImage(input, previewId) {
    const preview = document.getElementById(previewId);
    if (!preview) {
      console.log(`Preview element with id ${previewId} not found`);
      return;
    }

    preview.innerHTML = '';
    if (input.value) {
      const img = document.createElement('img');
      img.src = input.value;
      img.alt = '썸네일 미리보기';
      img.onerror = () => {
        preview.innerHTML = '<p>잘못된 이미지 URL입니다.</p>';
      };
      preview.appendChild(img);
    }
  }

  // 가격 포맷팅 함수
  function formatPrice(input) {
    let value = input.value.replace(/,/g, '');
    if (value !== '') {
      value = parseInt(value).toLocaleString();
      input.value = value;
    }
  }

  // 기본 옵션 관련 함수들
  function addOption() {
    const optionsList = document.getElementById('options-list');
    const optionCount = optionsList.children.length;

    const optionHtml = `
      <div class="edit-mart-option-group">
        <div class="edit-mart-option-inputs">
          <input type="text" name="options[${optionCount}][name]" 
                 class="edit-mart-option-name" placeholder="옵션명" required>
          <input type="text" name="options[${optionCount}][price]" 
                 class="edit-mart-option-price" placeholder="가격" required 
                 onchange="formatPrice(this)">
        </div>
        <button type="button" class="edit-mart-btn edit-mart-btn-danger" onclick="removeOption(this)">삭제</button>
      </div>
    `;
    optionsList.insertAdjacentHTML('beforeend', optionHtml);
  }

  function removeOption(button) {
    button.closest('.edit-mart-option-group').remove();
    updateOptionIndexes();
  }

  function updateOptionIndexes() {
    const optionsList = document.getElementById('options-list');
    const options = optionsList.getElementsByClassName('edit-mart-option-group');

    Array.from(options).forEach((option, index) => {
      const nameInput = option.querySelector('.edit-mart-option-name');
      const priceInput = option.querySelector('.edit-mart-option-price');
      nameInput.name = `options[${index}][name]`;
      priceInput.name = `options[${index}][price]`;
    });
  }

  // 상세 이미지 관련 함수들
  function addDetailedImage() {
    const imagesList = document.getElementById('detailed-images-list');
    const imageCount = imagesList.children.length;

    const imageHtml = `
      <div class="edit-mart-option-group">
        <div class="edit-mart-option-inputs">
          <input type="text" name="detailed_images[${imageCount}]" 
                 class="edit-mart-option-name" placeholder="이미지 URL" required>
        </div>
        <button type="button" class="edit-mart-btn edit-mart-btn-danger" 
                onclick="removeDetailedImage(this)">삭제</button>
      </div>
    `;
    imagesList.insertAdjacentHTML('beforeend', imageHtml);
  }

  function removeDetailedImage(button) {
    button.closest('.edit-mart-option-group').remove();
    updateDetailedImageIndexes();
  }

  function updateDetailedImageIndexes() {
    const imagesList = document.getElementById('detailed-images-list');
    const images = imagesList.getElementsByClassName('edit-mart-option-group');

    Array.from(images).forEach((image, index) => {
      const input = image.querySelector('input[type="text"]');
      input.name = `detailed_images[${index}]`;
    });
  }

  // 마켓 관련 함수들
  function addMarket() {
    const marketsList = document.getElementById('market-links-list');
    const marketCount = marketsList.querySelectorAll('.edit-mart-market-group').length;

    const marketHtml = `
      <div class="edit-mart-market-group" data-market-index="${marketCount}">
        <div class="edit-mart-option-inputs">
          <input type="text" name="market_link_${marketCount}_market_name" 
                 class="edit-mart-option-name" placeholder="마켓 이름" required>
          <input type="text" name="market_link_${marketCount}_market_url" 
                 class="edit-mart-option-name" placeholder="마켓 URL" required>
        </div>
        <textarea name="market_link_${marketCount}_market_description" 
                  class="edit-mart-option-name" placeholder="마켓 설명"></textarea>
        <div class="edit-mart-market-options">
          <button type="button" class="edit-mart-btn edit-mart-btn-add-option" 
                  onclick="addMarketOption('${marketCount}')">+ 마켓 옵션 추가</button>
          <div class="market-options-list"></div>
        </div>
        <button type="button" class="edit-mart-btn edit-mart-btn-danger" 
                onclick="removeMarket(this)">마켓 삭제</button>
      </div>
    `;
    marketsList.insertAdjacentHTML('beforeend', marketHtml);
  }

  function addMarketOption(marketIndex) {
    marketIndex = parseInt(marketIndex);
    const marketGroup = document.querySelector(`[data-market-index="${marketIndex}"]`);
    const optionsList = marketGroup.querySelector('.market-options-list');
    const optionCount = optionsList.querySelectorAll('.edit-mart-option-group').length;

    const optionHtml = `
      <div class="edit-mart-option-group">
        <div class="edit-mart-option-inputs">
          <input type="text" name="market_link_${marketIndex}_market_options_${optionCount}_name" 
                 class="edit-mart-option-name" placeholder="옵션명" required>
          <input type="text" name="market_link_${marketIndex}_market_options_${optionCount}_price" 
                 class="edit-mart-option-price" placeholder="가격" required 
                 onchange="formatPrice(this)">
        </div>
        <button type="button" class="edit-mart-btn edit-mart-btn-danger" 
                onclick="removeMarketOption(this)">삭제</button>
      </div>
    `;
    optionsList.insertAdjacentHTML('beforeend', optionHtml);
  }

  function removeMarket(button) {
    button.closest('.edit-mart-market-group').remove();
    updateMarketIndexes();
  }

  function removeMarketOption(button) {
    button.closest('.edit-mart-option-group').remove();
    updateAllMarketOptions();
  }

  function updateMarketIndexes() {
    const markets = document.querySelectorAll('.edit-mart-market-group');
    markets.forEach((market, index) => {
      market.dataset.marketIndex = index;
      updateMarketInputNames(market, index);
    });
  }

  function updateMarketInputNames(market, marketIndex) {
    // 기본 입력 필드 업데이트
    const inputs = market.querySelectorAll('input[type="text"], textarea');
    inputs.forEach(input => {
      if (input.name.startsWith('market_link_')) {
        const nameParts = input.name.split('_');
        nameParts[2] = marketIndex;
        input.name = nameParts.join('_');
      }
    });

    // 옵션 입력 필드 업데이트
    const options = market.querySelectorAll('.edit-mart-option-group');
    options.forEach((option, optionIndex) => {
      const optionInputs = option.querySelectorAll('input');
      optionInputs.forEach(input => {
        input.name = input.name.replace(
          /market_link_\d+_market_options_\d+/,
          `market_link_${marketIndex}_market_options_${optionIndex}`
        );
      });
    });
  }

  function updateAllMarketOptions() {
    const markets = document.querySelectorAll('.edit-mart-market-group');
    markets.forEach(market => {
      const marketIndex = parseInt(market.dataset.marketIndex);
      updateMarketInputNames(market, marketIndex);
    });
  }

  // 폼 검증 함수
  function validateForm() {
    const form = document.getElementById('editMartForm');
    const inputs = form.querySelectorAll('input[required], textarea[required]');
    let isValid = true;

    // 필수 필드 검증
    inputs.forEach(input => {
      if (!input.value.trim()) {
        input.classList.add('edit-mart-is-invalid');
        isValid = false;
      } else {
        input.classList.remove('edit-mart-is-invalid');
      }
    });

    // 이미지 URL 검증
    const imageInputs = form.querySelectorAll('input[type="text"][name*="thumbnail"]');
    imageInputs.forEach(input => {
      if (input.required && !isValidImageUrl(input.value)) {
        input.classList.add('edit-mart-is-invalid');
        isValid = false;
      }
    });

    // 필수 섹션 검증
    if (!validateSection('options-list', '옵션') ||
      !validateSection('detailed-images-list', '상세 이미지') ||
      !validateSection('market-links-list', '마켓 정보')) {
      isValid = false;
    }

    return isValid;
  }

  function validateSection(sectionId, sectionName) {
    const section = document.getElementById(sectionId);
    if (!section || section.children.length === 0) {
      alert(`최소 1개 이상의 ${sectionName}를 추가해주세요.`);
      return false;
    }
    return true;
  }

  function isValidImageUrl(url) {
    try {
      new URL(url);
      return true;
    } catch (e) {
      return false;
    }
  }

  function validateAndSubmit() {
    if (!validateForm()) {
      return false;
    }

    // 1. 기본 상품 옵션 데이터 수집
    const optionsList = document.getElementById('options-list');
    const options = Array.from(optionsList.getElementsByClassName('edit-mart-option-group'))
      .map(group => ({
        name: group.querySelector('.edit-mart-option-name').value,
        price: Number(group.querySelector('.edit-mart-option-price').value.replace(/,/g, ''))
      }));

    // 2. 마켓 정보 데이터 수집
    const marketsList = document.getElementById('market-links-list');
    const marketLinks = Array.from(marketsList.getElementsByClassName('edit-mart-market-group'))
      .map(marketGroup => {
        const marketIndex = marketGroup.dataset.marketIndex;
        const marketOptions = Array.from(marketGroup.querySelectorAll('.market-options-list .edit-mart-option-group'))
          .map(optionGroup => ({
            name: optionGroup.querySelector('input[name$="_name"]').value,
            price: Number(optionGroup.querySelector('input[name$="_price"]').value.replace(/,/g, ''))
          }));

        return {
          market_name: marketGroup.querySelector(`input[name="market_link_${marketIndex}_market_name"]`).value,
          market_url: marketGroup.querySelector(`input[name="market_link_${marketIndex}_market_url"]`).value,
          market_description: marketGroup.querySelector(`textarea[name="market_link_${marketIndex}_market_description"]`).value,
          market_options: marketOptions
        };
      });

    // 3. hidden inputs 업데이트
    // 기존 옵션 input 업데이트
    updateHiddenInput('options', options);
    // 마켓 정보 input 업데이트
    updateHiddenInput('market_link', marketLinks);

    return true;
  }

  // hidden input 업데이트 헬퍼 함수
  function updateHiddenInput(name, value) {
    const existingInput = document.querySelector(`input[name="${name}"]`);
    if (existingInput) {
      existingInput.remove();
    }

    const input = document.createElement('input');
    input.type = 'hidden';
    input.name = name;
    input.value = JSON.stringify(value);
    document.getElementById('editMartForm').appendChild(input);
  }

  // 초기화
  document.addEventListener('DOMContentLoaded', () => {
    const imageInputs = document.querySelectorAll('input[type="text"][name*="thumbnail"]');
    imageInputs.forEach(input => {
      if (input.value) {
        const previewId = input.id.includes('additional_thumbnail')
          ? 'preview_add' + input.id.slice(-1)
          : 'preview' + input.id.slice(-1);
        previewImage(input, previewId);
      }
    });
  });
</script>